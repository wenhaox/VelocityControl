python3 unit_convert.py -c sawRobotIO1394-PSM1-334809.xml.json -f capture_Mon_Dec_30_02_26_20_2024.csv

g++ -std=c++17 -Wall -O2 -Ijsoncpp/include zynq_test.cpp jsoncpp/src/lib_json/json_reader.cpp jsoncpp/src/lib_json/json_value.cpp jsoncpp/src/lib_json/json_writer.cpp -o zynq_test
./zynq_test sawRobotIO1394-PSM1-334809.xml.json


// Create safety zone near limits (10% of range or fixed value) stop if within 5% of limit
// test joint limit wiht hand first and see for a printout
// get the feedback from the board, do the control computation, and then write the motor currents.  
// The first is done by calling ReadAllBoards in the port class (in your case, ZynqEmioPort).  
// Once you get the feedback, you would call AmpIO::GetEncoderVelocityPredicted to get the velocity (in counts/sec).  
// For writing the motor current, you would call AmpIO::SetMotorCurrent to build the local buffer, and then ZynqEmioPort::WriteAllBoards to actually send it to the FPGA. 